name: fast start azure resources

on:
  # push:
  #   branches:
  #     - main
  schedule:
    - cron: '30 2 * * 1-5'      # Start timing is set as per UTC time zone as based on 08:00 AM IST
  workflow_dispatch:

env:
  VM_TAG_KEY: "auto"
  VM_TAG_VALUE: "yes"
  AKS_TAG_KEY: "foo"
  AKS_TAG_VALUE: "bar"
  ResourceGroup: "RG1"

jobs:
  Azure_VM_Start:
    permissions:
      contents: read
      id-token: write
    if: always()
    runs-on: ubuntu-latest
    steps:

    # Logs in with your Azure credentials
    - name: Azure login
      uses: azure/login@v1.4.3
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
    # Run commads to start the azure resources
    - name: start_azure_vm
      # if: always()
      run: |
        #rgstr=$(az vm list --query "[?tags.${{ env.VM_TAG_KEY }} == '${{ env.VM_TAG_VALUE }}'].{Group:resourceGroup}" -o tsv)
        #for vmrg in ${rgstr[@]}; do
          #echo "running command with ResourceGroup $vmrg"
          vmstr=$(az vm list -g ${{ env.ResourceGroup }} --query "[?tags.${{ env.VM_TAG_KEY }} == '${{ env.VM_TAG_VALUE }}'].{Name:name}" -o tsv)
          for vm in ${vmstr[@]}; do
            echo "starting Azure VM $vm"
            az vm start -g ${{ env.ResourceGroup }} -n $vm
          done  
        #done
    - name: start_azure_vm_faild
      if: ${{ failure() }}
      uses: slackapi/slack-github-action@v1.19.0
      with:
        # Slack channel id, channel name, or user id to post message.
        # See also: https://api.slack.com/methods/chat.postMessage#channels
        channel-id: '#azure-notifications'
        # For posting a rich message using Block Kit
        payload: |
          {
            "text": "GitHub Action Job to Stop Azure VMs has faild.",
            "blocks": [
              {
               "type": "section",
                "text": {
                 "type": "mrkdwn",
                  "text": "GitHub Action Job to Stop Azure VMs has faild."
                }
              }
            ]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        # SLACK_ACCESS: ${{ secrets.SLACK_ACCESS }}
        
  Azure_AKS_Start:
    permissions:
      contents: read
      id-token: write
    if: always()
    runs-on: ubuntu-latest
    steps:

    # Logs in with your Azure credentials
    - name: Azure login
      uses: azure/login@v1.4.3
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}        

    - name: start_azure_aks_cluster
      # if: always()
      run: |
        #krgstr=$(az aks list --query "[?tags.${{ env.AKS_TAG_KEY }} == '${{ env.AKS_TAG_VALUE }}'].{Group:resourceGroup}" -o tsv)
        #for krg in ${krgstr[@]}; do
          #echo "running command with ResourceGroup $krg"
          kclusterstr=$(az aks list -g ${{ env.ResourceGroup }} --query "[?tags.${{ env.AKS_TAG_KEY }} == '${{ env.AKS_TAG_VALUE }}'].{Name:name}" -o tsv)
          for kcluster in ${kclusterstr[@]}; do
            echo "starting Azure AKS $kcluster"
            az aks start -g ${{ env.ResourceGroup }} -n $kcluster
          done  
        #done

    - name: start_azure_aks_faild
      if: ${{ failure() }}
      uses: slackapi/slack-github-action@v1.19.0
      with:
        # Slack channel id, channel name, or user id to post message.
        # See also: https://api.slack.com/methods/chat.postMessage#channels
        channel-id: '#azure-notifications'
        # For posting a rich message using Block Kit
        payload: |
          {
            "text": "GitHub Action Job to Stop AKS has faild.",
            "blocks": [
              {
               "type": "section",
                "text": {
                 "type": "mrkdwn",
                  "text": "GitHub Action Job to Stop AKS has faild."
                }
              }
            ]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        # SLACK_ACCESS: ${{ secrets.SLACK_ACCESS }}



    # - name: Commit files
    #   id: commit
    #   run: |
    #     git config --local user.email "devopshemant@gmail.com"
    #     git config --local user.name "devops-hemant"
    #     git add resources.html
    #     git commit -m "Add changes" -a
    #   shell: bash
    # - name: Push changes
    #   uses: ad-m/github-push-action@master
    #   with:
    #      github_token: ${{ secrets.MY_TOKEN }}
    #      branch: ${{ github.ref }}

  # Slack_Notification:
  #   permissions:
  #     contents: read
  #     id-token: write
  #   needs: [azure_VM_start, azure_AKS_start,]
  #   # if: always()
  #   runs-on: ubuntu-latest
  #   steps:

  #   - name: Send GitHub Action trigger data to Slack workflow
  #     # if: always()
  #     id: slack
  #     uses: slackapi/slack-github-action@v1.19.0
  #     with:
  #       # Slack channel id, channel name, or user id to post message.
  #       # See also: https://api.slack.com/methods/chat.postMessage#channels
  #       channel-id: '#azure-notifications'
  #       # For posting a rich message using Block Kit
  #       payload: |
  #         {
  #           "text": "Azure Resources are Running succesfully\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
  #           "blocks": [
  #             {
  #              "type": "section",
  #               "text": {
  #                "type": "mrkdwn",
  #                 "text": "Azure Resources are Running succesfully\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
  #               }
  #             }
  #           ]
  #         }
  #     env:
  #       SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  #       # SLACK_ACCESS: ${{ secrets.SLACK_ACCESS}}

  Resources_Status_Report:
    permissions:
      contents: read
      id-token: write
    needs: [azure_VM_start, azure_AKS_start,] #[Slack_Notification]
    if: always()
    runs-on: ubuntu-latest
    steps:

    - name: Send GitHub Action trigger data to Slack workflow
      id: slack
      uses: slackapi/slack-github-action@v1.19.0
      with:
        # Slack channel id, channel name, or user id to post message.
        # See also: https://api.slack.com/methods/chat.postMessage#channels
        channel-id: '#azure-notifications'
        # For posting a rich message using Block Kit
        payload: |
          {
            "text": "Azure Resources are Running ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
            "blocks": [
              {
               "type": "section",
                "text": {
                 "type": "mrkdwn",
                  "text": "Azure Resources are Running ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                }
              }
            ]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        # SLACK_ACCESS: ${{ secrets.SLACK_ACCESS}}

    # Logs in with your Azure credentials
    - name: Azure login
      uses: azure/login@v1.4.3
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
    # Checks out the repository this file is in
    - uses: actions/checkout@v2
      with:
        persist-credentials: false
        fetch-depth: 0

    - name: Resource_Status_Repot
      run: |
        date > resources.html
        az vm list -d --query "[?tags.${{ env.VM_TAG_KEY }} == '${{ env.VM_TAG_VALUE }}'].{VM_Name:name ResourceGroup:resourceGroup PowerState:powerState Location:location PublicIP:publicIps}" -o table >> resources.html
        echo " " >> resources.html
        echo "=============================================================================================================================" >> resources.html
        echo " " >> resources.html
        az aks list --query "[?tags.${{ env.AKS_TAG_KEY }} == '${{ env.AKS_TAG_VALUE }}'].{AKS_Name:name ResourceGroup:resourceGroup PowerState:powerState.code Location:location URL:fqdn}" -o table >> resources.html
    
    # - name: 'Upload Artifact'
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: my-artifact
    #     path: resources.html
    #     retention-days: 7

    - name: send slack Slack_Notification
      run: |
        curl -F file=@resources.html -F "initial_comment=Azure Resources Status Table" -F channels=azure-notifications -H "Authorization: Bearer ${{ secrets.SLACK_ACCESS }}" https://slack.com/api/files.upload

  # Azure_Resources_Status:
  #   permissions:
  #     contents: read
  #     id-token: write
  #   needs: [Resources_Status_Check, Slack_Notification]
  #   if: always()
  #   runs-on: ubuntu-latest
  #   steps:

  #   - name: Download a single artifact
  #     uses: actions/download-artifact@v3
  #     with:
  #       name: my-artifact
    
  #   - name: create variable  
  #     run:  
  #       RESOURCES=$(cat resources.html)

  #   - name: Send GitHub Action trigger data to Slack workflow
  #     # if: always()
  #     id: slack
  #     uses: slackapi/slack-github-action@v1.19.0
  #     with:
  #       # Slack channel id, channel name, or user id to post message.
  #       # See also: https://api.slack.com/methods/chat.postMessage#channels
  #       channel-id: '#azure-notifications'
  #       # For posting a rich message using Block Kit
  #       payload: |
  #         {
  #           "text": "Use link to check status report:\n${RESOURCES}",
  #           "blocks": [
  #             {
  #              "type": "section",
  #               "text": {
  #                "type": "mrkdwn",
  #                 "text": "Use link to check status report:\n${RESOURCES}"
  #               }
  #             }
  #           ]
  #         }
  #     env:
  #       SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  #       # SLACK_ACCESS: ${{ secrets.SLACK_ACCESS }}