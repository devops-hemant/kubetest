name: azure

on:
  schedule:
    - cron: '30 2 * * 1-5'      # Start timing is set as per UTC time zone as based on 08:00 AM IST
    - cron: '30 14 * * 1-5'     # Stop timing is set as per UTC time zone as based on 08:00 PM IST

env:
  VM_TAG_KEY: "app"
  VM_TAG_VLAUE: "nginx"
  AKS_TAG_KEY: "foo"
  AKS_TAG_VLAUE: "bar"  


jobs:
  azureResourcesStop:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
    # Checks out the repository this file is in
    #- uses: actions/checkout@v3
    
    # Logs in with your Azure credentials
    - name: Azure login
      uses: azure/login@v1.4.3
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
    # Run commads to stop the azure resources
    - name: stop_azure_vm
      if: github.event.schedule != '30 2 * * 1-5'
      run: |
        rgstr=$(az vm list --query "[?tags.${{ env.VM_TAG_KEY }} == '${{ env.VM_TAG_VLAUE }}'].{Group:resourceGroup}" -o tsv)
        for vmrg in ${rgstr[@]}; do
          echo "running command with ResourceGroup $vmrg"
          vmstr=$(az vm list -g $vmrg --query "[?tags.${{ env.VM_TAG_KEY }} == '${{ env.VM_TAG_VLAUE }}'].{Name:name}" -o tsv)
          for vm in ${vmstr[@]}; do
            echo "Stopping Azure VM $vm"
            az vm stop -g $vmrg -n $vm
            echo "Running deallocating command"
            az vm deallocate -g $vmrg -n $vm
          done  
        done

    - name: stop_azure_aks_cluster
      if: github.event.schedule != '30 2 * * 1-5'
      run: |
        krgstr=$(az aks list --query "[?tags.${{ env.AKS_TAG_KEY }} == '${{ env.AKS_TAG_VLAUE }}'].{Group:resourceGroup}" -o tsv)
        for krg in ${krgstr[@]}; do
          echo "running command with ResourceGroup $krg"
          kclusterstr=$(az aks list -g $krg --query "[?tags.${{ env.VM_TAG_KEY }} == '${{ env.VM_TAG_VLAUE }}'].{Name:name}" -o tsv)
          for kcluster in ${kclusterstr[@]}; do
            echo "Stopping Azure AKS $kcluster"
            az aks stop -g $krg -n $kcluster
          done  
        done

    # Run commads to start the azure resources
    - name: start_azure_vm
      if: github.event.schedule != '30 14 * * 1-5'
      run: |
        rgstr=$(az vm list --query "[?tags.${{ env.VM_TAG_KEY }} == '${{ env.VM_TAG_VLAUE }}'].{Group:resourceGroup}" -o tsv)
        for vmrg in ${rgstr[@]}; do
          echo "running command with ResourceGroup $vmrg"
          vmstr=$(az vm list -g $vmrg --query "[?tags.${{ env.VM_TAG_KEY }} == '${{ env.VM_TAG_VLAUE }}'].{Name:name}" -o tsv)
          for vm in ${vmstr[@]}; do
            echo "Starting Azure VM $vm"
            az vm start -g $vmrg -n $vm
          done  
        done
        
    - name: start_azure_aks_cluster
      if: github.event.schedule != '30 14 * * 1-5'
      run: |
        krgstr=$(az aks list --query "[?tags.${{ env.AKS_TAG_KEY }} == '${{ env.AKS_TAG_VLAUE }}'].{Group:resourceGroup}" -o tsv)
        for krg in ${krgstr[@]}; do
          echo "running command with ResourceGroup $krg"
          kclusterstr=$(az aks list -g $krg --query "[?tags.${{ env.VM_TAG_KEY }} == '${{ env.VM_TAG_VLAUE }}'].{Name:name}" -o tsv)
          for kcluster in ${kclusterstr[@]}; do
            echo "Starting Azure VM $kcluster"
            az vm start -g $krg -n $kcluster
          done  
        done